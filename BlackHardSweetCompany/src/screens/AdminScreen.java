/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screens;

import guicontroller.MainFrame;
import java.awt.Component;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author lynch
 */
public class AdminScreen extends javax.swing.JFrame {

    JTable jTable1;
    JTable jTable2;
    JTable jTable3;
    JTable jTable4;
    
    /**
     * Creates new form AdminScreen
     */
    public AdminScreen() {
        initComponents();
        
        jTable1 = new JTable(MainFrame.getDriverModel());
        jTable1.setEnabled(false);
        JScrollPane scrollPane1 = new JScrollPane(jTable1);
        scrollPane1.setName("View Driver");
        this.add(scrollPane1);
        this.add(addDriver);
        
        jTable2 = new JTable(MainFrame.getInventoryModel());
        jTable2.setEnabled(false);
        JScrollPane scrollPane2 = new JScrollPane(jTable2);
        scrollPane2.setName("View Inventory");
        this.add(scrollPane2);
        this.add(addInventory);

        jTable3 = new JTable(MainFrame.getCustOrderModel());
        jTable3.setEnabled(false);
        JScrollPane scrollPane3 = new JScrollPane(jTable3);
        scrollPane3.setName("View Order");
        this.add(scrollPane3);
        this.add(makeOrder);
        
        jTable4 = new JTable(MainFrame.getCustomerModel());
        jTable4.setEnabled(false);
        JScrollPane scrollPane4 = new JScrollPane(jTable4);
        scrollPane4.setName("View Customer");
        this.add(scrollPane4);
        this.add(addDriver);
    }
    
    public Boolean isInteger(String test){        
        try{
            if(test == null){
                return false;
            }
            Integer.parseInt(test);
            return true;
        }catch(NumberFormatException e){
            return false;
        }
    }
    
    public JComboBox<String> getComboBox(String comboBox){
        JComboBox temp = new JComboBox();
        switch(comboBox){
            case "items" -> {
                return itemComboBox;
            }
            case "customers" -> {
                return customerComboBox;
            }
        }
        return temp;
    }
    
    public JTable getTable(String table){
        JTable test = new JTable();
        switch (table) {
            case "Driver" -> {
                return jTable1;
            }
            case "Inventory" -> {
                return jTable2;
            }
            case "CustOrder" -> {
                return jTable3;
            }
            case "Customer" -> {
                return jTable4;
            }
            default -> {
            }
        }
        return test;
    }
    
    public Map <String, Component> getAllPanels(){
        Map<String, Component> coordinates = new HashMap<>();
        
        for(Component comp : this.getContentPane().getComponents()){
            coordinates.put(comp.getName(), comp);
        }
        return coordinates;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        addCustomer = new javax.swing.JPanel();
        customerFirstNameLabel = new javax.swing.JLabel();
        customerFirstNameTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        customerLastNameLabel = new javax.swing.JLabel();
        customerLastNameTextField = new javax.swing.JTextField();
        customerAddressLabel = new javax.swing.JLabel();
        customerAddressTextField = new javax.swing.JTextField();
        addDriver = new javax.swing.JPanel();
        driverFirstNameLabel = new javax.swing.JLabel();
        driverFirstNameTextField = new javax.swing.JTextField();
        driverLastNameLabel = new javax.swing.JLabel();
        driverUserNameTextField = new javax.swing.JTextField();
        driverUserNameLabel = new javax.swing.JLabel();
        driverLastNameTextField = new javax.swing.JTextField();
        driverPasswordLabel = new javax.swing.JLabel();
        driverPassWordTextField = new javax.swing.JTextField();
        addDriverButton = new javax.swing.JButton();
        addInventory = new javax.swing.JPanel();
        firstNameLabel1 = new javax.swing.JLabel();
        itemNameTextField = new javax.swing.JTextField();
        quantity = new javax.swing.JLabel();
        inventoryQuantityTextField = new javax.swing.JTextField();
        itemPriceTextField = new javax.swing.JTextField();
        addItemButton = new javax.swing.JButton();
        inventoryClearButton = new javax.swing.JButton();
        lastNameLabel1 = new javax.swing.JLabel();
        makeOrder = new javax.swing.JPanel();
        itemComboBox = new javax.swing.JComboBox<>();
        confirmOrderButton = new javax.swing.JButton();
        orderQuantityTextField = new javax.swing.JTextField();
        candyAmountLabel = new javax.swing.JLabel();
        orderClearButton = new javax.swing.JButton();
        customerComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addCustomer.setName("Add Customer"); // NOI18N

        customerFirstNameLabel.setText("First Name");

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        customerLastNameLabel.setText("Last Name");

        customerAddressLabel.setText("Address");

        javax.swing.GroupLayout addCustomerLayout = new javax.swing.GroupLayout(addCustomer);
        addCustomer.setLayout(addCustomerLayout);
        addCustomerLayout.setHorizontalGroup(
            addCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCustomerLayout.createSequentialGroup()
                .addGroup(addCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCustomerLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(addCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(addCustomerLayout.createSequentialGroup()
                                .addComponent(customerAddressLabel)
                                .addGap(41, 41, 41)
                                .addComponent(customerAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addCustomerLayout.createSequentialGroup()
                                .addComponent(customerLastNameLabel)
                                .addGap(27, 27, 27)
                                .addComponent(customerLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addCustomerLayout.createSequentialGroup()
                                .addComponent(customerFirstNameLabel)
                                .addGap(26, 26, 26)
                                .addComponent(customerFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(addCustomerLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        addCustomerLayout.setVerticalGroup(
            addCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCustomerLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(addCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerFirstNameLabel)
                    .addComponent(customerFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerLastNameLabel)
                    .addComponent(customerLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerAddressLabel)
                    .addComponent(customerAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        addDriver.setName("Add Driver"); // NOI18N
        addDriver.setLayout(new java.awt.GridBagLayout());

        driverFirstNameLabel.setText("First Name");
        driverFirstNameLabel.setAlignmentX(1.0F);
        driverFirstNameLabel.setAlignmentY(1.0F);
        addDriver.add(driverFirstNameLabel, new java.awt.GridBagConstraints());

        driverFirstNameTextField.setToolTipText("");
        driverFirstNameTextField.setAlignmentX(2.0F);
        driverFirstNameTextField.setAlignmentY(1.0F);
        driverFirstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                driverFirstNameTextFieldActionPerformed(evt);
            }
        });
        addDriver.add(driverFirstNameTextField, new java.awt.GridBagConstraints());

        driverLastNameLabel.setText("Last Name");
        driverLastNameLabel.setAlignmentX(1.0F);
        driverLastNameLabel.setAlignmentY(2.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        addDriver.add(driverLastNameLabel, gridBagConstraints);

        driverUserNameTextField.setAlignmentX(1.0F);
        driverUserNameTextField.setAlignmentY(2.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        addDriver.add(driverUserNameTextField, gridBagConstraints);

        driverUserNameLabel.setText("Username");
        driverUserNameLabel.setAlignmentX(1.0F);
        driverUserNameLabel.setAlignmentY(3.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        addDriver.add(driverUserNameLabel, gridBagConstraints);

        driverLastNameTextField.setAlignmentX(2.0F);
        driverLastNameTextField.setAlignmentY(3.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        addDriver.add(driverLastNameTextField, gridBagConstraints);

        driverPasswordLabel.setText("Password");
        driverPasswordLabel.setAlignmentX(1.0F);
        driverPasswordLabel.setAlignmentY(4.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        addDriver.add(driverPasswordLabel, gridBagConstraints);

        driverPassWordTextField.setAlignmentX(2.0F);
        driverPassWordTextField.setAlignmentY(4.0F);
        driverPassWordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                driverPassWordTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        addDriver.add(driverPassWordTextField, gridBagConstraints);

        addDriverButton.setText("Add Driver");
        addDriverButton.setAlignmentY(5.0F);
        addDriverButton.setName("Add Driver"); // NOI18N
        addDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDriverButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        addDriver.add(addDriverButton, gridBagConstraints);

        addInventory.setName("Add Item"); // NOI18N
        addDriver.setName("Add Employee");
        addInventory.setLayout(new java.awt.GridBagLayout());

        firstNameLabel1.setText("Item Name");
        firstNameLabel1.setAlignmentX(1.0F);
        firstNameLabel1.setAlignmentY(1.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        addInventory.add(firstNameLabel1, gridBagConstraints);

        itemNameTextField.setToolTipText("");
        itemNameTextField.setAlignmentX(2.0F);
        itemNameTextField.setAlignmentY(1.0F);
        itemNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        addInventory.add(itemNameTextField, gridBagConstraints);

        quantity.setText("Quantity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        addInventory.add(quantity, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        addInventory.add(inventoryQuantityTextField, gridBagConstraints);

        itemPriceTextField.setAlignmentX(2.0F);
        itemPriceTextField.setAlignmentY(3.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        addInventory.add(itemPriceTextField, gridBagConstraints);

        addItemButton.setText("Add Item");
        addItemButton.setAlignmentY(5.0F);
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        addInventory.add(addItemButton, gridBagConstraints);

        inventoryClearButton.setText("Clear");
        inventoryClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryClearButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        addInventory.add(inventoryClearButton, gridBagConstraints);

        lastNameLabel1.setText("Item Price");
        lastNameLabel1.setAlignmentX(1.0F);
        lastNameLabel1.setAlignmentY(2.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        addInventory.add(lastNameLabel1, gridBagConstraints);

        makeOrder.setName("Make Order"); // NOI18N

        itemComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        itemComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemComboBoxActionPerformed(evt);
            }
        });

        confirmOrderButton.setText("Confirm Order");
        confirmOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmOrderButtonActionPerformed(evt);
            }
        });

        candyAmountLabel.setText("Candy Amount");

        orderClearButton.setText("Clear");
        orderClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderClearButtonActionPerformed(evt);
            }
        });

        customerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        customerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout makeOrderLayout = new javax.swing.GroupLayout(makeOrder);
        makeOrder.setLayout(makeOrderLayout);
        makeOrderLayout.setHorizontalGroup(
            makeOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeOrderLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(makeOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(makeOrderLayout.createSequentialGroup()
                        .addComponent(candyAmountLabel)
                        .addGap(47, 47, 47)
                        .addComponent(orderQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(makeOrderLayout.createSequentialGroup()
                        .addComponent(confirmOrderButton)
                        .addGap(20, 20, 20)
                        .addComponent(orderClearButton))
                    .addComponent(customerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        makeOrderLayout.setVerticalGroup(
            makeOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeOrderLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(makeOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(candyAmountLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(makeOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmOrderButton)
                    .addComponent(orderClearButton))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addComponent(addDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(169, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(makeOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(addDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(156, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(makeOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void driverPassWordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_driverPassWordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_driverPassWordTextFieldActionPerformed

    private void addDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDriverButtonActionPerformed
        // TODO add your handling code here:
        if(driverUserNameTextField.getText().equals("") ||
                driverLastNameTextField.getText().equals("") ||
                driverPassWordTextField.getText().equals("") ||
                driverFirstNameTextField.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please ensure ALL fields are filled", "Incomplete Driver Information", JOptionPane.ERROR_MESSAGE);
        }else{
            String[] data = {driverFirstNameTextField.getText(), 
                driverLastNameTextField.getText(),
                driverUserNameTextField.getText(),
                driverPassWordTextField.getText()};
            MainFrame.getDatabase().addToTables(data, "Driver");
        }
        try {
            MainFrame.updateTable("Driver");
            MainFrame.updateTable("CustOrder");
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addDriverButtonActionPerformed

    private void driverFirstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_driverFirstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_driverFirstNameTextFieldActionPerformed

    private void itemNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameTextFieldActionPerformed

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        // TODO add your handling code here:
        if(itemNameTextField.getText().equals("") ||
                !isInteger(itemPriceTextField.getText()) ||
                !isInteger(inventoryQuantityTextField.getText())){
            JOptionPane.showMessageDialog(this, "Please ensure ALL fields are filled and are of the right type", "Incomplete Item Information", JOptionPane.ERROR_MESSAGE);
        }else{
            String data[] = {itemNameTextField.getText(),
                itemPriceTextField.getText(),
                inventoryQuantityTextField.getText()
            };
            MainFrame.getDatabase().addToTables(data, "Inventory");
        }
        try {
            MainFrame.updateTable("Inventory");
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addItemButtonActionPerformed

    private void itemComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemComboBoxActionPerformed

    private void inventoryClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryClearButtonActionPerformed
        // TODO add your handling code here:
        itemNameTextField.setText("");
        itemPriceTextField.setText("");
        inventoryQuantityTextField.setText("");
    }//GEN-LAST:event_inventoryClearButtonActionPerformed

    private void orderClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderClearButtonActionPerformed
        // TODO add your handling code here:
        orderQuantityTextField.setText("");
    }//GEN-LAST:event_orderClearButtonActionPerformed

    private void confirmOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmOrderButtonActionPerformed
        // TODO add your handling code here:
        if(!isInteger(orderQuantityTextField.getText())){
            JOptionPane.showMessageDialog(this, "Please ensure ALL fields are filled and are of the right type", "Incomplete Order Information", JOptionPane.ERROR_MESSAGE);
        }else{
            String[] data = {"I"+Integer.toString(itemComboBox.getSelectedIndex()),
            "C"+Integer.toString(customerComboBox.getSelectedIndex()),
            orderQuantityTextField.getText()};
            MainFrame.getDatabase().addToTables(data, "CustOrder");
        }
        try {
            MainFrame.updateTable("CustOrder");
            MainFrame.updateTable("Inventory");
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_confirmOrderButtonActionPerformed

    private void customerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        customerFirstNameTextField.setText("");
        customerLastNameTextField.setText("");
        customerAddressTextField.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(
                customerFirstNameTextField.getText().equals("") ||
                customerLastNameTextField.getText().equals("")||
                customerAddressTextField.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please ensure ALL fields are filled and are of the right type", "Incomplete Customer Information", JOptionPane.ERROR_MESSAGE);
        }else{
            String [] data = {customerFirstNameTextField.getText(),
            customerLastNameTextField.getText(),
            customerAddressTextField.getText()};
            MainFrame.getDatabase().addToTables(data, "Customer");
        try {
            MainFrame.updateTable("Customer");
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addCustomer;
    private javax.swing.JPanel addDriver;
    private javax.swing.JButton addDriverButton;
    private javax.swing.JPanel addInventory;
    private javax.swing.JButton addItemButton;
    private javax.swing.JLabel candyAmountLabel;
    private javax.swing.JButton confirmOrderButton;
    private javax.swing.JLabel customerAddressLabel;
    private javax.swing.JTextField customerAddressTextField;
    private javax.swing.JComboBox<String> customerComboBox;
    private javax.swing.JLabel customerFirstNameLabel;
    private javax.swing.JTextField customerFirstNameTextField;
    private javax.swing.JLabel customerLastNameLabel;
    private javax.swing.JTextField customerLastNameTextField;
    private javax.swing.JLabel driverFirstNameLabel;
    private javax.swing.JTextField driverFirstNameTextField;
    private javax.swing.JLabel driverLastNameLabel;
    private javax.swing.JTextField driverLastNameTextField;
    private javax.swing.JTextField driverPassWordTextField;
    private javax.swing.JLabel driverPasswordLabel;
    private javax.swing.JLabel driverUserNameLabel;
    private javax.swing.JTextField driverUserNameTextField;
    private javax.swing.JLabel firstNameLabel1;
    private javax.swing.JButton inventoryClearButton;
    private javax.swing.JTextField inventoryQuantityTextField;
    private javax.swing.JComboBox<String> itemComboBox;
    private javax.swing.JTextField itemNameTextField;
    private javax.swing.JTextField itemPriceTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel lastNameLabel1;
    private javax.swing.JPanel makeOrder;
    private javax.swing.JButton orderClearButton;
    private javax.swing.JTextField orderQuantityTextField;
    private javax.swing.JLabel quantity;
    // End of variables declaration//GEN-END:variables
}
